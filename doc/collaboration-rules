```md
# 🤝 BookJuk 협업 규칙 (Collaboration Rules)

> 이 문서는 BookJuk 팀원들이 원활하게 협업하기 위한 개발/문서/커밋/이슈/브랜치/PR 규칙을 정리한 것입니다.

---

## 1. 💬 커뮤니케이션 규칙

* 주요 소통 채널: \[GitHub Issues], Discord 채널, Google Meet
* 모든 개발 관련 논의는 **GitHub Issue 또는 PR 코멘트**를 남기고 공유합니다.
* 질문 또는 결정이 필요한 사항은 `@멘션`으로 팀원 지정하여 명확히 합니다.

---

## 2. 🗂️ Git 브랜치 전략 (Git Branch Strategy)

* 기본 브랜치: `main`
* 개발 브랜치: `dev`
* 기능 브랜치: `feature/기능명`
* 버그 브랜치: `fix/버그명`
* 문서 브랜치: `docs/문서이름`

### 브랜치 예시

```
feature/create-club
fix/join-error
```

---

## 3. 📝 커밋 컨벤션 (Git Commit Convention)

* `타입: 제목` 형태로 작성 (50자 이내)

| 타입       | 설명                |
|----------|-------------------|
| init     | 첫 커밋 메시지          |
| feat     | 새로운 기능 추가         |
| fix      | 버그 수정             |
| docs     | 문서 수정             |
| style    | 코드 포맷팅, 세미콜론 누락 등 |
| refactor | 리팩토링 (기능 변경 없음)   |
| test     | 테스트 코드 추가         |
| chore    | 기타 변경사항 (빌드 설정 등) |

### 커밋 메시지 예시

```
feat: 모임 생성 기능 API 구현
fix: 참여 신청 중복 검증 오류 수정
```

---

## 4. 🛠️ Pull Request (PR) 규칙

* 기능 구현 완료 시 `dev` 브랜치로 PR 생성
* PR 제목은 다음과 같은 형식 권장:

   * #`feat: 기능명` / `fix: 버그설명` / `docs: 문서 내용`
* PR 설명에 아래 포함:

    # 주요 변경사항
      -
    # 테스트 여부 (수동/자동)
      -
    # 관련 이슈 번호

---

## 5. 📄 이슈 관리 규칙

제목:  

## 설명 
 -

## 작업범위
 - [ ] 
 - [ ]

## 참고 사항 
  -

##작성자(담당자)

---

## 6. 🔍 코드 스타일 & 리뷰

* 코드 포맷팅: IntelliJ 기본 포맷 사용 (자동정렬 권장)
* 함수, 클래스 명명은 **의미 있는 영어**로 작성
* 각 PR은 1명 이상 리뷰 후 `merge` 진행
* 리뷰 시 **이해/변경/개선** 코멘트 남기기

---

## 7. 🗓️ 회의 및 스프린트

* 매일 저녁 간단 회고 또는 진행 상황 공유 
* 회의록은 `docs/meeting-notes/` 폴더에 날짜별로 작성
* 매주 주요 목표 스프린트 공유 및 일정 업데이트

---

> 본 문서는 `docs/collaboration.md` 경로에 위치하며, 변경 시 팀 전체 합의 후 반영합니다.
```
